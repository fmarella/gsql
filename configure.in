dnl Process this file with autoconf to produce a configure script.
dnl Created by Anjuta - will be overwritten
dnl If you don't want it to overwrite it,
dnl 	Please disable it in the Anjuta project configuration

AC_INIT(gsql, 0.2.2, http://gsql.org)

AM_INIT_AUTOMAKE(gsql, 0.2.2)
AM_CONFIG_HEADER(config.h)
AM_MAINTAINER_MODE

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC

GETTEXT_PACKAGE=gsql
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", [Package name for gettext])

dnl Languages which your application supports
ALL_LINGUAS="de ru"
AM_GLIB_GNU_GETTEXT

AM_PROG_LIBTOOL

# GTK+ stuff (taken and adapted from brasero)

AC_MSG_CHECKING([which gtk+ version to compile against])
AC_ARG_WITH([gtk],
  [AS_HELP_STRING([--with-gtk=2.0|3.0],[which gtk+ version to compile against (default: 2.0)])],
  [case "$with_gtk" in
     2.0|3.0) ;;
     *) AC_MSG_ERROR([invalid gtk version specified]) ;;
   esac],
  [with_gtk=2.0])
AC_MSG_RESULT([$with_gtk])

case "$with_gtk" in
  2.0) GTK_API_VERSION=2
       GTK_REQUIRED=2.18.0
       VTE_SUFFIX=
       ;;
  3.0) GTK_API_VERSION=3
       GTK_REQUIRED=2.91.4
       VTE_SUFFIX=-2.90
       ;;
esac
AC_DEFINE_UNQUOTED(GTK_API_VERSION, $GTK_API_VERSION, [Define the GTK+ API version])

pkg_modules="	gtk+-${GTK_API_VERSION}.0 >= $GTK_REQUIRED
				gconf-2.0
				gmodule-2.0
				gtksourceview-${GTK_API_VERSION}.0
				libnotify"

PKG_CHECK_MODULES(PACKAGE, [$pkg_modules])

AC_SUBST(PACKAGE_CFLAGS)
AC_SUBST(PACKAGE_LIBS)


PKG_CHECK_MODULES(NOTIFY, libnotify < 0.7, AC_DEFINE([NOTIFY_VERSION_NEW], [0], [Not using new libnotify]), AC_DEFINE([NOTIFY_VERSION_NEW], [1], [Using new libnotify]))

AC_ARG_WITH(gnome,
    AC_HELP_STRING([--with-gnome],[disable the GNOME support]),
    [case "${withval}" in
	yes) WITH_GNOME=yes ;;
	no) WITH_GNOME=no ;;
	*) AC_MSG_ERROR(bad value ${withval} for --with-gnome) ;;
    esac],
    [WITH_GNOME=yes]) dnl Default value

AM_CONDITIONAL(WITH_GNOME, test x$WITH_GNOME = "xyes")    
if test x$WITH_GNOME = "xyes"; then
	PKG_CHECK_MODULES(GNOME, libgnome-2.0 )
	PKG_CHECK_MODULES(GNOMEUI, libgnomeui-2.0 )
	AC_DEFINE([WITH_GNOME],[1],[Define if GNOME support is enabled])
fi

AC_ARG_ENABLE(plugin-vte,
  [  --disable-plugin-vte        Disable vte (terminal) plugin support in GSQL.],
  [ if test "$enableval" = "no"; then
       user_disabled_vte=1
    fi ],
  [ user_disabled_vte=0 ] ) 

AC_MSG_CHECKING(if vte plugin is disabled)
if test "$user_disabled_vte" = 1; then
	AC_MSG_RESULT(yes)
	vte_enabled="no"
else
	AC_MSG_RESULT(no)
	PKG_CHECK_MODULES(PLUGIN_VTE, vte$VTE_SUFFIX) 
	
	vte_enabled="yes"
	AC_SUBST(PLUGIN_VTE_CFLAGS)
	AC_SUBST(PLUGIN_VTE_LIBS)
fi

AM_CONDITIONAL(HAVE_PLUGIN_VTE, [test x$vte_enabled = xyes])


AC_ARG_ENABLE(plugin-tunnel,
  [  --disable-plugin-tunnel        Disable SSH-tunneling plugin in GSQL.],
  [ if test "$enableval" = "no"; then
       user_disabled_tunnel=1
    fi ],
  [ user_disabled_tunnel=0 ] ) 

AC_MSG_CHECKING(if tunnel plugin is disabled)
if test "$user_disabled_tunnel" = 1; then
	AC_MSG_RESULT(yes)
	tunnel_enabled="no"
else
	AC_MSG_RESULT(no)

dnl checking libssh headers and libs.
	AC_CHECK_HEADERS(libssh/libssh.h,,[AC_MSG_ERROR([ssh library: headers not found])])
	AC_CHECK_LIB(ssh,ssh_connect,[PLUGIN_TUNNEL_LIBS="-lssh"],[AC_MSG_ERROR([libssh not found])])

	
	tunnel_enabled="yes"
	AC_SUBST(PLUGIN_TUNNEL_CFLAGS)
	AC_SUBST(PLUGIN_TUNNEL_LIBS)
fi

AC_CHECK_LIB(gthread-2.0, g_thread_init)

AM_CONDITIONAL(HAVE_PLUGIN_TUNNEL, [test x$tunnel_enabled = xyes])



AC_SUBST(PACKAGE_CFLAGS)
AC_SUBST(PACKAGE_LIBS)



dnl Checks for libraries.
AC_SUBST(ORACLE_LIBS)

dnl Checks for header files.
AC_SUBST(ORACLE_CFLAGS)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_SUBST(ORACLE_LDFLAGS)


dnl Checks for library functions.
CHECK_ORACLE
CHECK_MYSQL
CHECK_PGSQL
CHECK_FIREBIRD

if test "x$HAVE_DB" = "x"; then
    AC_MSG_ERROR(Have no database support installed)
fi

AM_GCONF_SOURCE_2

dnl Checks for Additional stuffs.
AC_DEFINE(PROJECT_URL, "http://gsql.org", "")
AC_DEFINE(PROJECT_NAME, "GSQL", "")
dnl Bug report page
AC_DEFINE(PROJECT_BUG_REPORT_URL, "http://code.google.com/p/gsql/issues/list", "Bug report url")
dnl Requests'n'Questions page
AC_DEFINE(PROJECT_GROUP_URL, "http://groups.google.com/group/gsql-dev", "Mail group")

dnl Set PACKAGE_LOCALE_DIR in config.h.
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${ac_default_prefix}/${DATADIRNAME}/locale", [Package local directory])
else
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${prefix}/${DATADIRNAME}/locale", [Package local directory])
fi

dnl Set PACKAGE SOURCE DIR in config.h.
packagesrcdir=`cd $srcdir && pwd`

dnl Set PACKAGE PREFIX
if test "x${prefix}" = "xNONE"; then
  packageprefix=${ac_default_prefix}
else
  packageprefix=${prefix}
fi

dnl Set PACKAGE DATA & DOC DIR
packagedatadir=share
packagedocdir=doc/${PACKAGE}

dnl Set PACKAGE DIRs in config.h.
packagepixmapsdir=share/pixmaps/${PACKAGE}
packagehelpdir=share/gnome/help/${PACKAGE}
packagemenudir=share/gnome/apps
packagepluginsdir='$(libdir)/gsql/plugins'
packageenginesdir='$(libdir)/gsql/engines'
packageuidir=share/${PACKAGE}/ui
packagetemplatedir=share/${PACKAGE}/template



dnl Subst PACKAGE_PLUGINS_DIR.
PACKAGE_PLUGINS_DIR="${packagepluginsdir}"
AC_SUBST(PACKAGE_PLUGINS_DIR)
dnl AC_DEFINE_UNQUOTED(PACKAGE_PLUGINS_DIR, "${packageprefix}/${packagepluginsdir}", [Plugins dir])

dnl Subst PACKAGE_ENGINES_DIR.
PACKAGE_ENGINES_DIR="${packageenginesdir}"
AC_SUBST(PACKAGE_ENGINES_DIR)
dnl AC_DEFINE_UNQUOTED(PACKAGE_ENGINES_DIR, "${packageprefix}/${packageenginesdir}", [Engines dir])

dnl Subst PACKAGE_UI_DIR.
PACKAGE_UI_DIR="${packageprefix}/${packageuidir}"
AC_SUBST(PACKAGE_UI_DIR)
AC_DEFINE_UNQUOTED(PACKAGE_UI_DIR, "${packageprefix}/${packageuidir}", [UI dir])

dnl Subst PACKAGE_TEMPLATE_DIR.
PACKAGE_TEMPLATE_DIR="${packageprefix}/${packagetemplatedir}"
AC_SUBST(PACKAGE_TEMPLATE_DIR)
AC_DEFINE_UNQUOTED(PACKAGE_TEMPLATE_DIR, "${packageprefix}/${packagetemplatedir}", [Template dir])





dnl Subst PACKAGE_DATA_DIR.
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${packagedatadir}", [Package data directory])
dnl  PACKAGE_DATA_DIR="${packagedatadir}"
dnl  AC_SUBST(PACKAGE_DATA_DIR)
else
  AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${packageprefix}/${packagedatadir}", [Package data directory])
dnl  PACKAGE_DATA_DIR="${packageprefix}/${packagedatadir}"
dnl  AC_SUBST(PACKAGE_DATA_DIR)
fi


dnl Subst PACKAGE_DOC_DIR.
dnl NO_PREFIX_PACKAGE_DOC_DIR="${packagedocdir}"
dnl AC_SUBST(NO_PREFIX_PACKAGE_DOC_DIR)
PACKAGE_DOC_DIR="${packageprefix}/${packagedatadir}/${packagedocdir}"
AC_SUBST(PACKAGE_DOC_DIR)
AC_DEFINE_UNQUOTED(PACKAGE_DOC_DIR, "${packageprefix}/${packagedatadir}/${packagedocdir}", [Doc dir])


dnl Subst PACKAGE_PIXMAPS_DIR.
NO_PREFIX_PACKAGE_PIXMAPS_DIR="${packagepixmapsdir}"
AC_SUBST(NO_PREFIX_PACKAGE_PIXMAPS_DIR)
PACKAGE_PIXMAPS_DIR="${packageprefix}/${packagepixmapsdir}"
AC_SUBST(PACKAGE_PIXMAPS_DIR)
AC_DEFINE_UNQUOTED(PACKAGE_PIXMAPS_DIR, "${packageprefix}/${packagepixmapsdir}", [Pixmaps dir])



dnl Subst PACKAGE_HELP_DIR.
NO_PREFIX_PACKAGE_HELP_DIR="${packagehelpdir}"
AC_SUBST(NO_PREFIX_PACKAGE_HELP_DIR)
PACKAGE_HELP_DIR="${packageprefix}/${packagehelpdir}"
AC_SUBST(PACKAGE_HELP_DIR)
AC_DEFINE_UNQUOTED(PACKAGE_HELP_DIR, "${packageprefix}/${packagehelpdir}", [Helps dir])


dnl Subst PACKAGE_MENU_DIR.
NO_PREFIX_PACKAGE_MENU_DIR="${packagemenudir}"
AC_SUBST(NO_PREFIX_PACKAGE_MENU_DIR)
PACKAGE_MENU_DIR="${packageprefix}/${packagemenudir}"
AC_SUBST(PACKAGE_MENU_DIR)
AC_DEFINE_UNQUOTED(PACKAGE_MENU_DIR, "${packageprefix}/${packagemenudir}", [Menus dir])




# gtk-doc
#GTK_DOC_CHECK([1.4])

AC_OUTPUT([
Makefile
po/Makefile.in
libgsql/Makefile
libgsql/libgsql.pc
src/Makefile
engines/Makefile
engines/oracle/Makefile
engines/oracle/pixmaps/Makefile
engines/mysql/Makefile
engines/mysql/pixmaps/Makefile
engines/postgresql/Makefile
engines/postgresql/pixmaps/Makefile
engines/firebird/Makefile
engines/firebird/pixmaps/Makefile
plugins/Makefile
plugins/vte/Makefile
plugins/exporter/Makefile
plugins/runner/Makefile
plugins/tunnel/Makefile
pixmaps/Makefile
doc/Makefile
doc/gsql.1
gsql.desktop
])

echo
echo "$PACKAGE $VERSION"
echo
echo "Use GTK+ version................ : $GTK_API_VERSION.0"
echo "Use GNOME support................: $WITH_GNOME"
echo
echo "Plugins:"
echo "vte..............: $vte_enabled"
echo "tunnel...........: $tunnel_enabled"
echo
echo "Databases:"
echo "Firebird...............: $have_firebird"
echo "MYSQL..................: $have_mysql"
echo "ORACLE.................: $have_oracle"
echo "PGSQL..................: $have_pgsql"
echo

